{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About this documentation","text":"<p>The Sakila sample database was initially developed by Mike Hillyer, a former member of the MySQL AB documentation team. It is intended to provide a standard schema that can be used for examples in books, tutorials, articles, samples, and so forth. The Sakila sample database also serves to highlight features of MySQL such as Views, Stored Procedures, and Triggers.</p> <p>This sample documentation desribes the Firebird schema of the Sakila sample database. It was created with SQLDocs and MkDocs, and is based on the following Firebird port of the Sakila Database.</p> <p>You can find the source code for this sample documentation on GitHub.</p>"},{"location":"database/tables/actor/","title":"Table ACTOR","text":"<p>This table lists information for all actors. The table is joined to the FILM table by means of the FILM_ACTOR table.</p>"},{"location":"database/tables/actor/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>ACTOR_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each actor in the table.</p> <code>FIRST_NAME</code> <p><code>VARCHAR(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The actor first name.</p> <code>LAST_NAME</code> <p><code>VARCHAR(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The actor last name.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/actor/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>ACTOR</code> <p><code>ACTOR_ID</code></p>"},{"location":"database/tables/actor/#indices","title":"Indices","text":"<p>This table has 2 indices.</p> <code>ACTOR_IDX_LAST_NAME</code> <p><code>LAST_NAME</code></p> <code>RDB$PRIMARY1</code> <p><code>ACTOR_ID</code></p>"},{"location":"database/tables/address/","title":"Table ADDRESS","text":"<p>This table contains address information for customers, staff, and stores. The table primary key appears as a foreign key in the CUSTOMER, STAFF, and STORE tables.</p>"},{"location":"database/tables/address/#columns","title":"Columns","text":"<p>This table contains 8 columns.</p> <code>ADDRESS_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each address in the table.</p> <code>ADDRESS</code> <p><code>VARCHAR(50)</code> \u00b7 <code>NOT NULL</code></p> <p>The first line of an address.</p> <code>ADDRESS2</code> <p><code>VARCHAR(50)</code> \u00b7 <code>DEFAULT NULL</code></p> <p>An optional second line of an address.</p> <code>DISTRICT</code> <p><code>VARCHAR(20)</code> \u00b7 <code>NOT NULL</code></p> <p>The region of an address, this may be a state, province, prefecture, etc.</p> <code>CITY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing to the CITY table.</p> <code>POSTAL_CODE</code> <p><code>VARCHAR(10)</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The postal code or ZIP code of the address (where applicable).</p> <code>PHONE</code> <p><code>VARCHAR(20)</code> \u00b7 <code>NOT NULL</code></p> <p>The telephone number for the address.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/address/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>ADDRESS</code> <p><code>ADDRESS_ID</code></p>"},{"location":"database/tables/address/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_ADDRESS_CITY</code> <p><code>CITY_ID</code> \u00bb <code>CITY (CITY_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/address/#indices","title":"Indices","text":"<p>This table has 3 indices.</p> <code>FK_ADDRESS_CITY</code> <p><code>CITY_ID</code></p> <code>IDX_ADDRESS_FK_CITY_ID</code> <p><code>CITY_ID</code></p> <code>RDB$PRIMARY2</code> <p><code>ADDRESS_ID</code></p>"},{"location":"database/tables/category/","title":"Table CATEGORY","text":"<p>This table lists the categories that can be assigned to a film. The table is joined to the FILM table by means of the FILM_CATEGORY table.</p>"},{"location":"database/tables/category/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>CATEGORY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each category in the table.</p> <code>NAME</code> <p><code>VARCHAR(25)</code> \u00b7 <code>NOT NULL</code></p> <p>The name of the category.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/category/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>CATEGORY</code> <p><code>CATEGORY_ID</code></p>"},{"location":"database/tables/category/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>RDB$PRIMARY3</code> <p><code>CATEGORY_ID</code></p>"},{"location":"database/tables/city/","title":"Table CITY","text":"<p>This table contains a list of cities. The table is referred to by a foreign key in the ADDRESS table and refers to the COUNTRY table using a foreign key.</p>"},{"location":"database/tables/city/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>CITY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each city in the table.</p> <code>CITY</code> <p><code>VARCHAR(50)</code> \u00b7 <code>NOT NULL</code></p> <p>The name of the city.</p> <code>COUNTRY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the country that the city belongs to.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/city/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>CITY</code> <p><code>CITY_ID</code></p>"},{"location":"database/tables/city/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_CITY_COUNTRY</code> <p><code>COUNTRY_ID</code> \u00bb <code>COUNTRY (COUNTRY_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/city/#indices","title":"Indices","text":"<p>This table has 3 indices.</p> <code>FK_CITY_COUNTRY</code> <p><code>COUNTRY_ID</code></p> <code>IDX_CITY_FK_COUNTRY_ID</code> <p><code>COUNTRY_ID</code></p> <code>RDB$PRIMARY4</code> <p><code>CITY_ID</code></p>"},{"location":"database/tables/country/","title":"Table COUNTRY","text":"<p>This table contains a list of countries. The table is referred to by a foreign key in the CITY table.</p>"},{"location":"database/tables/country/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>COUNTRY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each country in the table.</p> <code>COUNTRY</code> <p><code>VARCHAR(50)</code> \u00b7 <code>NOT NULL</code></p> <p>The name of the country.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/country/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>COUNTRY</code> <p><code>COUNTRY_ID</code></p>"},{"location":"database/tables/country/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>RDB$PRIMARY5</code> <p><code>COUNTRY_ID</code></p>"},{"location":"database/tables/customer/","title":"Table CUSTOMER","text":"<p>This table contains a list of all customers. The table is referred to in the PAYMENT and RENTAL tables and refers to the ADDRESS and STORE tables using foreign keys.</p>"},{"location":"database/tables/customer/#columns","title":"Columns","text":"<p>This table contains 9 columns.</p> <code>CUSTOMER_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each customer in the table.</p> <code>STORE_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the customer home store. Customers are not limited to renting only from this store, but this is the store at which they generally shop.</p> <code>FIRST_NAME</code> <p><code>VARCHAR(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The customer first name.</p> <code>LAST_NAME</code> <p><code>VARCHAR(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The customer last name.</p> <code>EMAIL</code> <p><code>VARCHAR(50)</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The customer email address.</p> <code>ADDRESS_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the customer address in the ADDRESS table.</p> <code>ACTIVE</code> <p><code>BOOLEAN</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT TRUE</code></p> <p>Indicates whether the customer is an active customer. Setting this to <code>FALSE</code> serves as an alternative to deleting a customer outright. Most queries should have a <code>WHERE ACTIVE = TRUE</code> clause.</p> <code>CREATE_DATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>The date the customer was added to the system. This date is automatically set using a trigger during an INSERT.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/customer/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>CUSTOMER</code> <p><code>CUSTOMER_ID</code></p>"},{"location":"database/tables/customer/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_CUSTOMER_ADDRESS</code> <p><code>ADDRESS_ID</code> \u00bb <code>ADDRESS (ADDRESS_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_CUSTOMER_STORE</code> <p><code>STORE_ID</code> \u00bb <code>STORE (STORE_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/customer/#indices","title":"Indices","text":"<p>This table has 6 indices.</p> <code>FK_CUSTOMER_ADDRESS</code> <p><code>ADDRESS_ID</code></p> <code>FK_CUSTOMER_STORE</code> <p><code>STORE_ID</code></p> <code>IDX_CUSTOMER_FK_ADDRESS_ID</code> <p><code>ADDRESS_ID</code></p> <code>IDX_CUSTOMER_FK_STORE_ID</code> <p><code>STORE_ID</code></p> <code>IDX_CUSTOMER_LAST_NAME</code> <p><code>LAST_NAME</code></p> <code>RDB$PRIMARY6</code> <p><code>CUSTOMER_ID</code></p>"},{"location":"database/tables/film/","title":"Table FILM","text":"<p>This table is a list of all films potentially in stock in the stores. The actual in-stock copies of each film are represented in the inventory table. The table refers to the LANGUAGE table and is referred to by the FILM_CATEGORY, FILM_ACTOR, and INVENTORY tables.</p>"},{"location":"database/tables/film/#columns","title":"Columns","text":"<p>This table contains 13 columns.</p> <code>FILM_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each film in the table.</p> <code>TITLE</code> <p><code>VARCHAR(255)</code> \u00b7 <code>NOT NULL</code></p> <p>The title of the film.</p> <code>DESCRIPTION</code> <p><code>BLOB subtype text</code> \u00b7 <code>DEFAULT NULL</code></p> <p>A short description or plot summary of the film.</p> <code>RELEASE_YEAR</code> <p><code>INTEGER</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The year in which the movie was released.</p> <code>LANGUAGE_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing at the LANGUAGE table; identifies the language of the film.</p> <code>ORIGINAL_LANGUAGE_ID</code> <p><code>INTEGER</code> \u00b7 <code>DEFAULT NULL</code></p> <p>A foreign key pointing at the LANGUAGE table; identifies the original language of the film. Used when a film has been dubbed into a new language.</p> <code>RENTAL_DURATION</code> <p><code>SMALLINT</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT 3</code></p> <p>The length of the rental period, in days.</p> <code>RENTAL_RATE</code> <p><code>DECIMAL</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT 4.99</code></p> <p>The cost to rent the film for the period specified in the <code>RENTAL_DURATION</code> column.</p> <code>LENGTH</code> <p><code>SMALLINT</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The duration of the film, in minutes.</p> <code>REPLACEMENT_COST</code> <p><code>DECIMAL</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT 19.99</code></p> <p>The amount charged to the customer if the film is not returned or is returned in a damaged state.</p> <code>RATING</code> <p><code>VARCHAR(5)</code> \u00b7 <code>DEFAULT 'G'</code></p> <p>The rating assigned to the film. Can be one of: <code>G</code>, <code>PG</code>, <code>PG-13</code>, <code>R</code>, or <code>NC-17</code>.</p> Value Description G General audiences \u2013 All ages admitted. PG Parental guidance suggested \u2013 Some material may not be suitable for children. PG-13 Parents strongly cautioned \u2013 Some material may be inappropriate for children under 13. R Restricted \u2013 Under 17 requires accompanying parent or adult guardian. NC-17 No children under 17 admitted. <code>SPECIAL_FEATURES</code> <p><code>VARCHAR(100)</code> \u00b7 <code>DEFAULT NULL</code></p> <p>Lists which common special features are included on the DVD. Can be zero or more of: <code>Trailers</code>, <code>Commentaries</code>, <code>Deleted Scenes</code>, <code>Behind the Scenes</code>.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/film/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>FILM</code> <p><code>FILM_ID</code></p>"},{"location":"database/tables/film/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_FILM_LANGUAGE</code> <p><code>LANGUAGE_ID</code> \u00bb <code>LANGUAGE (LANGUAGE_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_FILM_LANGUAGE_ORIGINAL</code> <p><code>ORIGINAL_LANGUAGE_ID</code> \u00bb <code>LANGUAGE (LANGUAGE_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/film/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>FK_FILM_LANGUAGE</code> <p><code>LANGUAGE_ID</code></p> <code>FK_FILM_LANGUAGE_ORIGINAL</code> <p><code>ORIGINAL_LANGUAGE_ID</code></p> <code>IDX_FILM_FK_LANGUAGE_ID</code> <p><code>LANGUAGE_ID</code></p> <code>IDX_FILM_FK_ORIGINAL_LANGUAGE_ID</code> <p><code>ORIGINAL_LANGUAGE_ID</code></p> <code>RDB$PRIMARY7</code> <p><code>FILM_ID</code></p>"},{"location":"database/tables/film_actor/","title":"Table FILM_ACTOR","text":"<p>This table is used to support a many-to-many relationship between films and actors. For each actor in a given film, there will be one row in the FILM_ACTOR table listing the actor and film. The table refers to the FILM and ACTOR tables using foreign keys.</p>"},{"location":"database/tables/film_actor/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>ACTOR_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the actor.</p> <code>FILM_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the film.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/film_actor/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>FILM_ACTOR</code> <p><code>ACTOR_ID, FILM_ID</code></p>"},{"location":"database/tables/film_actor/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_FILM_ACTOR_ACTOR</code> <p><code>ACTOR_ID</code> \u00bb <code>ACTOR (ACTOR_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_FILM_ACTOR_FILM</code> <p><code>FILM_ID</code> \u00bb <code>FILM (FILM_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/film_actor/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>FILM_ACTOR_IDX_FK_ACTOR</code> <p><code>ACTOR_ID</code></p> <code>FILM_ACTOR_IDX_FK_FILM</code> <p><code>FILM_ID</code></p> <code>FK_FILM_ACTOR_ACTOR</code> <p><code>ACTOR_ID</code></p> <code>FK_FILM_ACTOR_FILM</code> <p><code>FILM_ID</code></p> <code>RDB$PRIMARY8</code> <p><code>ACTOR_ID, FILM_ID</code></p>"},{"location":"database/tables/film_category/","title":"Table FILM_CATEGORY","text":"<p>This table is used to support a many-to-many relationship between films and categories. For each category applied to a film, there will be one row in the FILM_CATEGORY table listing the category and film. The table refers to the FILM and CATEGORY tables using foreign keys.</p>"},{"location":"database/tables/film_category/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>FILM_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the film.</p> <code>CATEGORY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the category.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/film_category/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>FILM_CATEGORY</code> <p><code>FILM_ID, CATEGORY_ID</code></p>"},{"location":"database/tables/film_category/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_FILM_CATEGORY_CATEGORY</code> <p><code>CATEGORY_ID</code> \u00bb <code>CATEGORY (CATEGORY_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_FILM_CATEGORY_FILM</code> <p><code>FILM_ID</code> \u00bb <code>FILM (FILM_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/film_category/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>FILM_CATEGORY_IDX_FK_CATEGORY</code> <p><code>CATEGORY_ID</code></p> <code>FILM_CATEGORY_IDX_FK_FILM</code> <p><code>FILM_ID</code></p> <code>FK_FILM_CATEGORY_CATEGORY</code> <p><code>CATEGORY_ID</code></p> <code>FK_FILM_CATEGORY_FILM</code> <p><code>FILM_ID</code></p> <code>RDB$PRIMARY9</code> <p><code>FILM_ID, CATEGORY_ID</code></p>"},{"location":"database/tables/film_text/","title":"Table FILM_TEXT","text":"<p>This table contains the <code>FILM_ID</code>, <code>TITLE</code> and <code>DESCRIPTION</code> columns of the FILM table, with the contents of the table kept in synchrony with the FILM table by means of triggers on film table <code>INSERT</code>, <code>UPDATE</code> and <code>DELETE</code> operations.</p>"},{"location":"database/tables/film_text/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>FILM_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each film in the table.</p> <code>TITLE</code> <p><code>VARCHAR(255)</code> \u00b7 <code>NOT NULL</code></p> <p>The title of the film.</p> <code>DESCRIPTION</code> <p><code>BLOB subtype text</code></p> <p>A short description or plot summary of the film.</p>"},{"location":"database/tables/film_text/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>FILM_TEXT</code> <p><code>FILM_ID</code></p>"},{"location":"database/tables/film_text/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>RDB$PRIMARY10</code> <p><code>FILM_ID</code></p>"},{"location":"database/tables/inventory/","title":"Table INVENTORY","text":"<p>This table contains one row for each copy of a given film in a given store. The table refers to the FILM and STORE tables using foreign keys and is referred to by the RENTAL table.</p>"},{"location":"database/tables/inventory/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>INVENTORY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each item in inventory.</p> <code>FILM_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing to the film this item represents.</p> <code>STORE_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing to the store stocking this item.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/inventory/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>INVENTORY</code> <p><code>INVENTORY_ID</code></p>"},{"location":"database/tables/inventory/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_INVENTORY_FILM</code> <p><code>FILM_ID</code> \u00bb <code>FILM (FILM_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_INVENTORY_STORE</code> <p><code>STORE_ID</code> \u00bb <code>STORE (STORE_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/inventory/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>FK_INVENTORY_FILM</code> <p><code>FILM_ID</code></p> <code>FK_INVENTORY_STORE</code> <p><code>STORE_ID</code></p> <code>IDX_INVENTORY_FK_FILM_ID</code> <p><code>FILM_ID</code></p> <code>IDX_INVENTORY_FK_FILM_ID_STORE_ID</code> <p><code>STORE_ID, FILM_ID</code></p> <code>RDB$PRIMARY11</code> <p><code>INVENTORY_ID</code></p>"},{"location":"database/tables/language/","title":"Table LANGUAGE","text":"<p>This table is a lookup table listing the possible languages that films can have for their language and original language values. The table is referred to by the FILM table.</p>"},{"location":"database/tables/language/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>LANGUAGE_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each language.</p> <code>NAME</code> <p><code>CHAR(20)</code> \u00b7 <code>NOT NULL</code></p> <p>The English name of the language.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/language/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>LANGUAGE</code> <p><code>LANGUAGE_ID</code></p>"},{"location":"database/tables/language/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>RDB$PRIMARY12</code> <p><code>LANGUAGE_ID</code></p>"},{"location":"database/tables/payment/","title":"Table PAYMENT","text":"<p>This table records each payment made by a customer, with information such as the amount and the rental being paid for (when applicable). The table refers to the CUSTOMER, RENTAL, and STAFF table.</p>"},{"location":"database/tables/payment/#columns","title":"Columns","text":"<p>This table contains 7 columns.</p> <code>PAYMENT_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each payment.</p> <code>CUSTOMER_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>The customer whose balance the payment is being applied to. This is a foreign key reference to the CUSTOMER table.</p> <code>STAFF_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>The staff member who processed the payment. This is a foreign key reference to the STAFF table.</p> <code>RENTAL_ID</code> <p><code>INTEGER</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The rental that the payment is being applied to. This is optional because some payments are for outstanding fees and may not be directly related to a rental.</p> <code>AMOUNT</code> <p><code>DECIMAL</code> \u00b7 <code>NOT NULL</code></p> <p>The amount of the payment.</p> <code>PAYMENT_DATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code></p> <p>The date the payment was processed.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/payment/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>PAYMENT</code> <p><code>PAYMENT_ID</code></p>"},{"location":"database/tables/payment/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_PAYMENT_CUSTOMER</code> <p><code>CUSTOMER_ID</code> \u00bb <code>CUSTOMER (CUSTOMER_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_PAYMENT_RENTAL</code> <p><code>RENTAL_ID</code> \u00bb <code>RENTAL (RENTAL_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE SET NULL</code></p> <code>FK_PAYMENT_STAFF</code> <p><code>STAFF_ID</code> \u00bb <code>STAFF (STAFF_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/payment/#indices","title":"Indices","text":"<p>This table has 6 indices.</p> <code>FK_PAYMENT_CUSTOMER</code> <p><code>CUSTOMER_ID</code></p> <code>FK_PAYMENT_RENTAL</code> <p><code>RENTAL_ID</code></p> <code>FK_PAYMENT_STAFF</code> <p><code>STAFF_ID</code></p> <code>IDX_PAYMENT_FK_CUSTOMER_ID</code> <p><code>CUSTOMER_ID</code></p> <code>IDX_PAYMENT_FK_STAFF_ID</code> <p><code>STAFF_ID</code></p> <code>RDB$PRIMARY13</code> <p><code>PAYMENT_ID</code></p>"},{"location":"database/tables/rental/","title":"Table RENTAL","text":"<p>This table contains one row for each rental of each inventory item with information about who rented what item, when it was rented, and when it was returned. The table refers to the INVENTORY, CUSTOMER, and STAFF tables and is referred to by the PAYMENT table.</p>"},{"location":"database/tables/rental/#columns","title":"Columns","text":"<p>This table contains 7 columns.</p> <code>RENTAL_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key that uniquely identifies the rental.</p> <code>RENTAL_DATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code></p> <p>The date and time that the item was rented.</p> <code>INVENTORY_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>The item being rented.</p> <code>CUSTOMER_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>The customer renting the item.</p> <code>RETURN_DATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The date and time the item was returned.</p> <code>STAFF_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>The staff member who processed the rental.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/rental/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>RENTAL</code> <p><code>RENTAL_ID</code></p>"},{"location":"database/tables/rental/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_RENTAL_CUSTOMER</code> <p><code>CUSTOMER_ID</code> \u00bb <code>CUSTOMER (CUSTOMER_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_RENTAL_INVENTORY</code> <p><code>INVENTORY_ID</code> \u00bb <code>INVENTORY (INVENTORY_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_RENTAL_STAFF</code> <p><code>STAFF_ID</code> \u00bb <code>STAFF (STAFF_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/rental/#indices","title":"Indices","text":"<p>This table has 8 indices.</p> <code>FK_RENTAL_CUSTOMER</code> <p><code>CUSTOMER_ID</code></p> <code>FK_RENTAL_INVENTORY</code> <p><code>INVENTORY_ID</code></p> <code>FK_RENTAL_STAFF</code> <p><code>STAFF_ID</code></p> <code>IDX_RENTAL</code> <p><code>RENTAL_DATE, INVENTORY_ID, CUSTOMER_ID</code></p> <code>IDX_RENTAL_FK_CUSTOMER_ID</code> <p><code>CUSTOMER_ID</code></p> <code>IDX_RENTAL_FK_INVENTORY_ID</code> <p><code>INVENTORY_ID</code></p> <code>IDX_RENTAL_FK_STAFF_ID</code> <p><code>STAFF_ID</code></p> <code>RDB$PRIMARY14</code> <p><code>RENTAL_ID</code></p>"},{"location":"database/tables/staff/","title":"Table STAFF","text":"<p>This table lists all staff members, including information for email address, login information, and picture. The table refers to the STORE and ADDRESS tables using foreign keys, and is referred to by the RENTAL, PAYMENT, and STORE tables.</p>"},{"location":"database/tables/staff/#columns","title":"Columns","text":"<p>This table contains 11 columns.</p> <code>STAFF_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key that uniquely identifies the staff member.</p> <code>FIRST_NAME</code> <p><code>VARCHAR(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The first name of the staff member.</p> <code>LAST_NAME</code> <p><code>VARCHAR(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The last name of the staff member.</p> <code>ADDRESS_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key to the staff member address in the ADDRESS table.</p> <code>PICTURE</code> <p><code>BLOB subtype binary</code> \u00b7 <code>DEFAULT NULL</code></p> <p>A BLOB containing a photograph of the employee.</p> <code>EMAIL</code> <p><code>VARCHAR(50)</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The staff member email address.</p> <code>STORE_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>The staff member home store. The employee can work at other stores but is generally assigned to the store listed.</p> <code>ACTIVE</code> <p><code>BOOLEAN</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT TRUE</code></p> <p>Whether this is an active employee. If employees leave, their rows are not deleted from this table; instead, this column is set to <code>FALSE</code>.</p> <code>USERNAME</code> <p><code>VARCHAR(16)</code> \u00b7 <code>NOT NULL</code></p> <p>The user name used by the staff member to access the rental system.</p> <code>PASSWORD</code> <p><code>VARCHAR(40)</code> \u00b7 <code>DEFAULT NULL</code></p> <p>The password used by the staff member to access the rental system. The password should be stored as a secure hash.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/staff/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>STAFF</code> <p><code>STAFF_ID</code></p>"},{"location":"database/tables/staff/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_STAFF_ADDRESS</code> <p><code>ADDRESS_ID</code> \u00bb <code>ADDRESS (ADDRESS_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_STAFF_STORE</code> <p><code>STORE_ID</code> \u00bb <code>STORE (STORE_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/staff/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>FK_STAFF_ADDRESS</code> <p><code>ADDRESS_ID</code></p> <code>FK_STAFF_STORE</code> <p><code>STORE_ID</code></p> <code>IDX_STAFF_FK_ADDRESS_ID</code> <p><code>ADDRESS_ID</code></p> <code>IDX_STAFF_FK_STORE_ID</code> <p><code>STORE_ID</code></p> <code>RDB$PRIMARY15</code> <p><code>STAFF_ID</code></p>"},{"location":"database/tables/store/","title":"Table STORE","text":"<p>This table lists all stores in the system. All inventory is assigned to specific stores, and staff and customers are assigned a home store. The table refers to the STAFF and ADDRESS tables using foreign keys and is referred to by the STAFF, CUSTOMER, and INVENTORY tables.</p>"},{"location":"database/tables/store/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>STORE_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key that uniquely identifies the store.</p> <code>MANAGER_STAFF_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the manager of this store.</p> <code>ADDRESS_ID</code> <p><code>INTEGER</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the address of this store.</p> <code>LAST_UPDATE</code> <p><code>TIMESTAMP</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>DEFAULT CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/tables/store/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>STORE</code> <p><code>STORE_ID</code></p>"},{"location":"database/tables/store/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>FK_STORE_ADDRESS</code> <p><code>ADDRESS_ID</code> \u00bb <code>ADDRESS (ADDRESS_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p> <code>FK_STORE_STAFF</code> <p><code>MANAGER_STAFF_ID</code> \u00bb <code>STAFF (STAFF_ID)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE NO ACTION</code></p>"},{"location":"database/tables/store/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>FK_STORE_ADDRESS</code> <p><code>ADDRESS_ID</code></p> <code>FK_STORE_STAFF</code> <p><code>MANAGER_STAFF_ID</code></p> <code>IDX_STORE_FK_ADDRESS</code> <p><code>ADDRESS_ID</code></p> <code>IDX_STORE_FK_MANAGER_STAFF_ID</code> <p><code>MANAGER_STAFF_ID</code></p> <code>RDB$PRIMARY16</code> <p><code>STORE_ID</code></p>"},{"location":"database/views/actor_info/","title":"View ACTOR_INFO","text":"<p>This view provides a list of all actors, including the films in which they have performed, broken down by category. The view incorporates data from the FILM, ACTOR, CATEGORY, FILM_ACTOR, and FILM_CATEGORY tables.</p>"},{"location":"database/views/actor_info/#query","title":"Query","text":"SQL <pre><code>SELECT\n  a.actor_id,\n  a.first_name,\n  a.last_name,\n  LIST(\n    c.name||': '||(\n      SELECT \n        LIST(f.title, ', ')\n      FROM \n        film f\n      INNER JOIN \n        film_category fc ON f.film_id = fc.film_id\n      INNER JOIN \n        film_actor fa ON f.film_id = fa.film_id\n      WHERE \n        fc.category_id = c.category_id AND fa.actor_id = a.actor_id\n    ), '; ') AS film_info\nFROM \n  actor a\nLEFT JOIN \n  film_actor fa ON a.actor_id = fa.actor_id\nLEFT JOIN \n  film_category fc ON fa.film_id = fc.film_id\nLEFT JOIN \n  category c ON fc.category_id = c.category_id\nGROUP BY \n  a.actor_id, a.first_name, a.last_name\n</code></pre>"},{"location":"database/views/actor_info/#columns","title":"Columns","text":"<p>This view contains 4 columns.</p> <code>ACTOR_ID</code> <p><code>INTEGER</code></p> <code>FIRST_NAME</code> <p><code>VARCHAR(45)</code></p> <code>LAST_NAME</code> <p><code>VARCHAR(45)</code></p> <code>FILM_INFO</code> <p><code>BLOB subtype text</code></p>"},{"location":"database/views/customer_list/","title":"View CUSTOMER_LIST","text":"<p>This view provides a list of customers, with first name and last name concatenated together and address information combined into a single view. The view incorporates data from the CUSTOMER, ADDRESS, CITY, and COUNTRY tables.</p>"},{"location":"database/views/customer_list/#query","title":"Query","text":"SQL <pre><code>SELECT \n  cu.customer_id AS ID,\n  cu.first_name||' '||cu.last_name AS name,\n  a.address AS address,\n  a.postal_code AS \"zip code\",\n  a.phone AS phone,\n  city.city AS city,\n  country.country AS country,\n  case when cu.active=1 then 'active' else '' end AS notes,\n  cu.store_id AS SID\nFROM \n  customer AS cu \nJOIN  \n  address AS a ON cu.address_id = a.address_id \nJOIN \n  city ON a.city_id = city.city_id\nJOIN \n  country ON city.country_id = country.country_id\n</code></pre>"},{"location":"database/views/customer_list/#columns","title":"Columns","text":"<p>This view contains 9 columns.</p> <code>ID</code> <p><code>INTEGER</code></p> <code>NAME</code> <p><code>VARCHAR(91)</code></p> <code>ADDRESS</code> <p><code>VARCHAR(50)</code></p> <code>zip code</code> <p><code>VARCHAR(10)</code></p> <code>PHONE</code> <p><code>VARCHAR(20)</code></p> <code>CITY</code> <p><code>VARCHAR(50)</code></p> <code>COUNTRY</code> <p><code>VARCHAR(50)</code></p> <code>NOTES</code> <p><code>CHAR(6)</code></p> <code>SID</code> <p><code>INTEGER</code></p>"},{"location":"database/views/film_list/","title":"View FILM_LIST","text":"<p>This view contains a formatted view of the FILM table, with a comma-separated list of actors for each film. The view incorporates data from the FILM, CATEGORY, FILM_CATEGORY, ACTOR, and FILM_ACTOR tables.</p>"},{"location":"database/views/film_list/#query","title":"Query","text":"SQL <pre><code>SELECT \n  film.film_id AS FID,\n  film.title AS title,\n  film.description AS description,\n  category.name AS category,\n  film.rental_rate AS price,\n  film.length AS length,\n  film.rating AS rating,\n  LIST(actor.first_name||' '||actor.last_name, ', ') AS actors\nFROM \n  film \nLEFT JOIN \n  film_category ON film_category.film_id = film.film_id\nLEFT JOIN \n  category ON category.category_id = film_category.category_id \nLEFT JOIN \n  film_actor ON film.film_id = film_actor.film_id \nLEFT JOIN \n  actor ON film_actor.actor_id = actor.actor_id\nGROUP BY \n  film.film_id, \n  category.name, \n  film.title,\n  film.description, \n  film.rental_rate, \n  film.length, \n  film.rating\n</code></pre>"},{"location":"database/views/film_list/#columns","title":"Columns","text":"<p>This view contains 8 columns.</p> <code>FID</code> <p><code>INTEGER</code></p> <code>TITLE</code> <p><code>VARCHAR(255)</code></p> <code>DESCRIPTION</code> <p><code>BLOB subtype text</code></p> <code>CATEGORY</code> <p><code>VARCHAR(25)</code></p> <code>PRICE</code> <p><code>DECIMAL</code></p> <code>LENGTH</code> <p><code>SMALLINT</code></p> <code>RATING</code> <p><code>VARCHAR(5)</code></p> <code>ACTORS</code> <p><code>BLOB subtype text</code></p>"},{"location":"database/views/nicer_but_slower_film_list/","title":"View NICER_BUT_SLOWER_FILM_LIST","text":"<p>This view contains a formatted view of the FILM table, with a comma-separated list of the film's actors. The view differs from the FILM_LIST view in the list of actors. The lettercase of the actor names is adjusted so that the first letter of each name is capitalized, rather than having the name in all-caps. As indicated in its name, this view performs additional processing and therefore takes longer to return data than the FILM_LIST view. The view incorporates data from the FILM, CATEGORY, FILM_CATEGORY, ACTOR, and FILM_ACTOR tables.</p>"},{"location":"database/views/nicer_but_slower_film_list/#query","title":"Query","text":"SQL <pre><code>SELECT \n  film.film_id AS FID, \n  film.title AS title, \n  film.description AS description, \n  category.name AS category, \n  film.rental_rate AS price,\n  film.length AS length, \n  film.rating AS rating, \n  LIST(\n    UPPER(SUBSTRING(actor.first_name from 1 for 1))||LOWER(SUBSTRING(actor.first_name from 2 for CHAR_LENGTH(actor.first_name)))||' '||\n    UPPER(SUBSTRING(actor.last_name from 1 for 1))||LOWER(SUBSTRING(actor.last_name from 2 for CHAR_LENGTH(actor.last_name))), ', ') AS actors\nFROM \n  film \nLEFT JOIN \n  film_category ON film_category.film_id = film.film_id\nLEFT JOIN \n  category ON category.category_id = film_category.category_id \nLEFT JOIN \n  film_actor ON film.film_id = film_actor.film_id \nLEFT JOIN \n  actor ON film_actor.actor_id = actor.actor_id\nGROUP BY \n  film.film_id, \n  category.name, \n  film.title,\n  film.description, \n  film.rental_rate, \n  film.length, \n  film.rating\n</code></pre>"},{"location":"database/views/nicer_but_slower_film_list/#columns","title":"Columns","text":"<p>This view contains 8 columns.</p> <code>FID</code> <p><code>INTEGER</code></p> <code>TITLE</code> <p><code>VARCHAR(255)</code></p> <code>DESCRIPTION</code> <p><code>BLOB subtype text</code></p> <code>CATEGORY</code> <p><code>VARCHAR(25)</code></p> <code>PRICE</code> <p><code>DECIMAL</code></p> <code>LENGTH</code> <p><code>SMALLINT</code></p> <code>RATING</code> <p><code>VARCHAR(5)</code></p> <code>ACTORS</code> <p><code>BLOB subtype text</code></p>"},{"location":"database/views/sales_by_film_category/","title":"View SALES_BY_FILM_CATEGORY","text":"<p>This view provides a list of total sales, broken down by individual film category. Because a film can be listed in multiple categories, it is not advisable to calculate aggregate sales by totalling the rows of this view. The view incorporates data from the CATEGORY, PAYMENT, RENTAL, INVENTORY, FILM, FILM_CATEGORY, and CATEGORY tables.</p>"},{"location":"database/views/sales_by_film_category/#query","title":"Query","text":"SQL <pre><code>SELECT\n  c.name AS category, \n  SUM(p.amount) AS total_sales\nFROM \n  payment AS p\nINNER JOIN \n  rental AS r ON p.rental_id = r.rental_id\nINNER JOIN \n  inventory AS i ON r.inventory_id = i.inventory_id\nINNER JOIN \n  film AS f ON i.film_id = f.film_id\nINNER JOIN \n  film_category AS fc ON f.film_id = fc.film_id\nINNER JOIN \n  category AS c ON fc.category_id = c.category_id\nGROUP BY \n  c.name\nORDER BY \n  total_sales DESC\n</code></pre>"},{"location":"database/views/sales_by_film_category/#columns","title":"Columns","text":"<p>This view contains 2 columns.</p> <code>CATEGORY</code> <p><code>VARCHAR(25)</code></p> <code>TOTAL_SALES</code> <p><code>DECIMAL</code></p>"},{"location":"database/views/sales_by_store/","title":"View SALES_BY_STORE","text":"<p>This view provides a list of total sales, broken down by store. The view returns the store location, manager name, and total sales. The view incorporates data from the CITY, COUNTRY, PAYMENT, RENTAL, INVENTORY, STORE, ADDRESS, and STAFF tables.</p>"},{"location":"database/views/sales_by_store/#query","title":"Query","text":"SQL <pre><code>SELECT\n  c.city||','||cy.country AS store,\n  m.first_name||' '||m.last_name AS manager,\n  SUM(p.amount) AS total_sales\nFROM \n  payment AS p\nINNER JOIN \n  rental AS r ON p.rental_id = r.rental_id\nINNER JOIN \n  inventory AS i ON r.inventory_id = i.inventory_id\nINNER JOIN \n  store AS s ON i.store_id = s.store_id\nINNER JOIN \n  address AS a ON s.address_id = a.address_id\nINNER JOIN \n  city AS c ON a.city_id = c.city_id\nINNER JOIN \n  country AS cy ON c.country_id = cy.country_id\nINNER JOIN \n  staff AS m ON s.manager_staff_id = m.staff_id\nGROUP BY \n  s.store_id, store, manager\n</code></pre>"},{"location":"database/views/sales_by_store/#columns","title":"Columns","text":"<p>This view contains 3 columns.</p> <code>STORE</code> <p><code>VARCHAR(101)</code></p> <code>MANAGER</code> <p><code>VARCHAR(91)</code></p> <code>TOTAL_SALES</code> <p><code>DECIMAL</code></p>"},{"location":"database/views/staff_list/","title":"View STAFF_LIST","text":"<p>This view provides a list of all staff members, including address and store information. The view incorporates data from the STAFF and ADDRESS tables.</p>"},{"location":"database/views/staff_list/#query","title":"Query","text":"SQL <pre><code>SELECT \n  s.staff_id AS ID,\n  s.first_name||' '||s.last_name AS name, \n  a.address AS address, \n  a.postal_code AS \"zip code\",\n  a.phone AS phone,\n  city.city AS city, \n  country.country AS country, \n  s.store_id AS SID\nFROM \n  staff AS s \nJOIN \n  address AS a ON s.address_id = a.address_id \nJOIN \n  city ON a.city_id = city.city_id\nJOIN \n  country ON city.country_id = country.country_id\n</code></pre>"},{"location":"database/views/staff_list/#columns","title":"Columns","text":"<p>This view contains 8 columns.</p> <code>ID</code> <p><code>INTEGER</code></p> <code>NAME</code> <p><code>VARCHAR(91)</code></p> <code>ADDRESS</code> <p><code>VARCHAR(50)</code></p> <code>zip code</code> <p><code>VARCHAR(10)</code></p> <code>PHONE</code> <p><code>VARCHAR(20)</code></p> <code>CITY</code> <p><code>VARCHAR(50)</code></p> <code>COUNTRY</code> <p><code>VARCHAR(50)</code></p> <code>SID</code> <p><code>INTEGER</code></p>"}]}