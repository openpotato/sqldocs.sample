{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About this documentation","text":"<p>The Sakila sample database was initially developed by Mike Hillyer, a former member of the MySQL AB documentation team. It is intended to provide a standard schema that can be used for examples in books, tutorials, articles, samples, and so forth. The Sakila sample database also serves to highlight features of MySQL such as Views, Stored Procedures, and Triggers.</p> <p>This sample documentation desribes the PostgreSQL schema of the Sakila sample database. It was created with SQLDocs and MkDocs, and is based on the following PostgreSQL port of the Sakila Database.</p> <p>You can find the source code for this sample documentation on GitHub.</p>"},{"location":"database/sakila/schema/","title":"Schema","text":""},{"location":"database/sakila/schema/#tables","title":"Tables","text":"<p>This schema contains 16 tables.</p> <ul> <li> <p>actor</p> </li> <li> <p>address</p> </li> <li> <p>category</p> </li> <li> <p>city</p> </li> <li> <p>country</p> </li> <li> <p>customer</p> </li> <li> <p>film</p> </li> <li> <p>film_actor</p> </li> <li> <p>film_category</p> </li> <li> <p>film_text</p> </li> <li> <p>inventory</p> </li> <li> <p>language</p> </li> <li> <p>payment</p> </li> <li> <p>rental</p> </li> <li> <p>staff</p> </li> <li> <p>store</p> </li> </ul>"},{"location":"database/sakila/schema/#views","title":"Views","text":"<p>This schema contains 7 views.</p> <ul> <li> <p>actor_info</p> </li> <li> <p>customer_list</p> </li> <li> <p>film_list</p> </li> <li> <p>nicer_but_slower_film_list</p> </li> <li> <p>sales_by_film_category</p> </li> <li> <p>sales_by_store</p> </li> <li> <p>staff_list</p> </li> </ul>"},{"location":"database/sakila/tables/actor/","title":"Table actor","text":"<p>This table lists information for all actors. The table is joined to the film table by means of the film_actor table.</p>"},{"location":"database/sakila/tables/actor/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/actor/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>actor_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each actor in the table.</p> <code>first_name</code> <p><code>character varying(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The actor first name.</p> <code>last_name</code> <p><code>character varying(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The actor last name.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/actor/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>actor</code> <p><code>actor_id</code></p>"},{"location":"database/sakila/tables/actor/#indices","title":"Indices","text":"<p>This table has 2 indices.</p> <code>actor_pkey</code> <p><code>actor_id</code></p> <code>idx_actor_last_name</code> <p><code>last_name</code></p>"},{"location":"database/sakila/tables/address/","title":"Table address","text":"<p>This table contains address information for customers, staff, and stores. The table primary key appears as a foreign key in the customer, staff, and store tables.</p>"},{"location":"database/sakila/tables/address/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/address/#columns","title":"Columns","text":"<p>This table contains 8 columns.</p> <code>address_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each address in the table.</p> <code>address</code> <p><code>character varying(50)</code> \u00b7 <code>NOT NULL</code></p> <p>The first line of an address.</p> <code>address2</code> <p><code>character varying(50)</code> \u00b7 <code>NULL::character varying</code></p> <p>An optional second line of an address.</p> <code>district</code> <p><code>character varying(20)</code> \u00b7 <code>NOT NULL</code></p> <p>The region of an address, this may be a state, province, prefecture, etc.</p> <code>city_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing to the city table.</p> <code>postal_code</code> <p><code>character varying(10)</code> \u00b7 <code>NULL::character varying</code></p> <p>The postal code or ZIP code of the address (where applicable).</p> <code>phone</code> <p><code>character varying(20)</code> \u00b7 <code>NOT NULL</code></p> <p>The telephone number for the address.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/address/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>address</code> <p><code>address_id</code></p>"},{"location":"database/sakila/tables/address/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_address_city</code> <p><code>city_id</code> \u00bb <code>sakila.city (city_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/address/#indices","title":"Indices","text":"<p>This table has 2 indices.</p> <code>address_pkey</code> <p><code>address_id</code></p> <code>idx_address_fk_city_id</code> <p><code>city_id</code></p>"},{"location":"database/sakila/tables/category/","title":"Table category","text":"<p>This table lists the categories that can be assigned to a film. The table is joined to the film table by means of the film_category table.</p>"},{"location":"database/sakila/tables/category/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/category/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>category_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each category in the table.</p> <code>name</code> <p><code>character varying(25)</code> \u00b7 <code>NOT NULL</code></p> <p>The name of the category.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/category/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>category</code> <p><code>category_id</code></p>"},{"location":"database/sakila/tables/category/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>category_pkey</code> <p><code>category_id</code></p>"},{"location":"database/sakila/tables/city/","title":"Table city","text":"<p>This table contains a list of cities. The table is referred to by a foreign key in the address table and refers to the country table using a foreign key.</p>"},{"location":"database/sakila/tables/city/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/city/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>city_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each city in the table.</p> <code>city</code> <p><code>character varying(50)</code> \u00b7 <code>NOT NULL</code></p> <p>The name of the city.</p> <code>country_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the country that the city belongs to.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/city/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>city</code> <p><code>city_id</code></p>"},{"location":"database/sakila/tables/city/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_city_country</code> <p><code>country_id</code> \u00bb <code>sakila.country (country_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/city/#indices","title":"Indices","text":"<p>This table has 2 indices.</p> <code>city_pkey</code> <p><code>city_id</code></p> <code>idx_city_fk_country_id</code> <p><code>country_id</code></p>"},{"location":"database/sakila/tables/country/","title":"Table country","text":"<p>This table contains a list of countries. The table is referred to by a foreign key in the CITY table.</p>"},{"location":"database/sakila/tables/country/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/country/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>country_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each country in the table.</p> <code>country</code> <p><code>character varying(50)</code> \u00b7 <code>NOT NULL</code></p> <p>The name of the country.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/country/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>country</code> <p><code>country_id</code></p>"},{"location":"database/sakila/tables/country/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>country_pkey</code> <p><code>country_id</code></p>"},{"location":"database/sakila/tables/customer/","title":"Table customer","text":"<p>This table contains a list of all customers.The table is referred to in the payment and rental tables and refers to the address and store tables using foreign keys.</p>"},{"location":"database/sakila/tables/customer/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/customer/#columns","title":"Columns","text":"<p>This table contains 9 columns.</p> <code>customer_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each customer in the table.</p> <code>store_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the customer home store. Customers are not limited to renting only from this store, but this is the store at which they generally shop.</p> <code>first_name</code> <p><code>character varying(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The customer first name.</p> <code>last_name</code> <p><code>character varying(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The customer last name.</p> <code>email</code> <p><code>character varying(50)</code> \u00b7 <code>NULL::character varying</code></p> <p>The customer email address.</p> <code>address_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the customer address in the address table.</p> <code>active</code> <p><code>boolean</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>true</code></p> <p>Indicates whether the customer is an active customer. Setting this to <code>FALSE</code> serves  as an alternative to deleting a customer outright. Most queries should have a <code>WHERE active = TRUE</code> clause.</p> <code>create_date</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code></p> <p>The date the customer was added to the system. This date is automatically set using a trigger during an <code>INSERT</code>.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/customer/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>customer</code> <p><code>customer_id</code></p>"},{"location":"database/sakila/tables/customer/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_customer_address</code> <p><code>address_id</code> \u00bb <code>sakila.address (address_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_customer_store</code> <p><code>store_id</code> \u00bb <code>sakila.store (store_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/customer/#indices","title":"Indices","text":"<p>This table has 4 indices.</p> <code>customer_pkey</code> <p><code>customer_id</code></p> <code>idx_customer_fk_address_id</code> <p><code>address_id</code></p> <code>idx_customer_fk_store_id</code> <p><code>store_id</code></p> <code>idx_customer_last_name</code> <p><code>last_name</code></p>"},{"location":"database/sakila/tables/film/","title":"Table film","text":"<p>This table is a list of all films potentially in stock in the stores. The actual in-stock copies of each film are represented in the inventory table. The table refers to the language table and is referred to by the film_category, film_actor, and inventory tables.</p>"},{"location":"database/sakila/tables/film/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/film/#columns","title":"Columns","text":"<p>This table contains 13 columns.</p> <code>film_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each film in the table.</p> <code>title</code> <p><code>character varying(128)</code> \u00b7 <code>NOT NULL</code></p> <p>The title of the film.</p> <code>description</code> <p><code>text</code></p> <p>A short description or plot summary of the film.</p> <code>release_year</code> <p><code>sakila.yearonly</code> \u00b7 <code>NULL::integer</code></p> <p>The year in which the movie was released.</p> <code>language_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing at the language table; identifies the language of the film.</p> <code>original_language_id</code> <p><code>smallint</code></p> <p>A foreign key pointing at the language table; identifies the original language of the film. Used when a film has been dubbed into a new language.</p> <code>rental_duration</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>3</code></p> <p>The length of the rental period, in days.</p> <code>rental_rate</code> <p><code>numeric(4,2)</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>4.99</code></p> <p>The cost to rent the film for the period specified in the <code>rental_duration</code> column.</p> <code>length</code> <p><code>smallint</code></p> <p>The duration of the film, in minutes.</p> <code>replacement_cost</code> <p><code>numeric(5,2)</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>19.99</code></p> <p>The amount charged to the customer if the film is not returned or is returned in a damaged state.</p> <code>rating</code> <p><code>sakila.rating</code> \u00b7 <code>'G'::sakila.rating</code></p> <p>The rating assigned to the film. Can be one of: <code>G</code>, <code>PG</code>, <code>PG-13</code>, <code>R</code>, or <code>NC-17</code>.</p> Value Description G General audiences \u2013 All ages admitted. PG Parental guidance suggested \u2013 Some material may not be suitable for children. PG-13 Parents strongly cautioned \u2013 Some material may be inappropriate for children under 13. R Restricted \u2013 Under 17 requires accompanying parent or adult guardian. NC-17 No children under 17 admitted. <code>special_features</code> <p><code>text[]</code></p> <p>Lists which common special features are included on the DVD. Can be zero or more of: <code>Trailers</code>, <code>Commentaries</code>, <code>Deleted Scenes</code>, <code>Behind the Scenes</code>.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/film/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>film</code> <p><code>film_id</code></p>"},{"location":"database/sakila/tables/film/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_film_language</code> <p><code>language_id</code> \u00bb <code>sakila.language (language_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_film_language_original</code> <p><code>original_language_id</code> \u00bb <code>sakila.language (language_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/film/#indices","title":"Indices","text":"<p>This table has 4 indices.</p> <code>film_pkey</code> <p><code>film_id</code></p> <code>idx_film_fk_language_id</code> <p><code>language_id</code></p> <code>idx_film_fk_original_language_id</code> <p><code>original_language_id</code></p> <code>idx_film_title</code> <p><code>title</code></p>"},{"location":"database/sakila/tables/film_actor/","title":"Table film_actor","text":"<p>This table is used to support a many-to-many relationship between films and actors. For each actor in a given film, there will be one row in the film_actor table listing the actor and film. The table refers to the film and actor tables using foreign keys.</p>"},{"location":"database/sakila/tables/film_actor/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/film_actor/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>actor_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the actor.</p> <code>film_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the film.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/film_actor/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>film_actor</code> <p><code>actor_id, film_id</code></p>"},{"location":"database/sakila/tables/film_actor/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_film_actor_actor</code> <p><code>actor_id</code> \u00bb <code>sakila.actor (actor_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_film_actor_film</code> <p><code>film_id</code> \u00bb <code>sakila.film (film_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/film_actor/#indices","title":"Indices","text":"<p>This table has 2 indices.</p> <code>film_actor_pkey</code> <p><code>actor_id, film_id</code></p> <code>idx_film_actor_fk_film_id</code> <p><code>film_id</code></p>"},{"location":"database/sakila/tables/film_category/","title":"Table film_category","text":"<p>This table is used to support a many-to-many relationship between films and categories. For each category applied to a film, there will be one row in the film_category table listing the category and film. The table refers to the film and category tables using foreign keys.</p>"},{"location":"database/sakila/tables/film_category/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/film_category/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>film_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the film.</p> <code>category_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the category.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/film_category/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>film_category</code> <p><code>film_id, category_id</code></p>"},{"location":"database/sakila/tables/film_category/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_film_category_category</code> <p><code>category_id</code> \u00bb <code>sakila.category (category_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_film_category_film</code> <p><code>film_id</code> \u00bb <code>sakila.film (film_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/film_category/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>film_category_pkey</code> <p><code>film_id, category_id</code></p>"},{"location":"database/sakila/tables/film_text/","title":"Table film_text","text":"<p>This table contains the <code>film_id</code>, <code>title</code> and <code>description</code> columns of the film table, with the contents of the table kept in synchrony with the film table by means of triggers on film table <code>INSERT</code>, <code>UPDATE</code> and <code>DELETE</code> operations.</p>"},{"location":"database/sakila/tables/film_text/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/film_text/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>film_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each film in the table.</p> <code>title</code> <p><code>character varying(255)</code> \u00b7 <code>NOT NULL</code></p> <p>The title of the film.</p> <code>description</code> <p><code>text</code></p> <p>A short description or plot summary of the film.</p>"},{"location":"database/sakila/tables/film_text/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>film_text</code> <p><code>film_id</code></p>"},{"location":"database/sakila/tables/film_text/#indices","title":"Indices","text":"<p>This table has 2 indices.</p> <code>film_text_pkey</code> <p><code>film_id</code></p> <code>idx_film_text_title_description</code> <p><code>title, description</code></p>"},{"location":"database/sakila/tables/inventory/","title":"Table inventory","text":"<p>This table contains one row for each copy of a given film in a given store. The table refers to the film and store tables using foreign keys and is referred to by the rental table.</p>"},{"location":"database/sakila/tables/inventory/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/inventory/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>inventory_id</code> <p><code>integer</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each item in inventory.</p> <code>film_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing to the film this item represents.</p> <code>store_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key pointing to the store stocking this item.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/inventory/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>inventory</code> <p><code>inventory_id</code></p>"},{"location":"database/sakila/tables/inventory/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_inventory_film</code> <p><code>film_id</code> \u00bb <code>sakila.film (film_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_inventory_store</code> <p><code>store_id</code> \u00bb <code>sakila.store (store_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/inventory/#indices","title":"Indices","text":"<p>This table has 3 indices.</p> <code>inventory_pkey</code> <p><code>inventory_id</code></p> <code>idx_inventory_fk_film_id</code> <p><code>film_id</code></p> <code>idx_inventory_store_id_film_id</code> <p><code>film_id, store_id</code></p>"},{"location":"database/sakila/tables/language/","title":"Table language","text":"<p>This table is a lookup table listing the possible languages that films can have for their language and original language values. The table is referred to by the film table.</p>"},{"location":"database/sakila/tables/language/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/language/#columns","title":"Columns","text":"<p>This table contains 3 columns.</p> <code>language_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each language.</p> <code>name</code> <p><code>character(20)</code> \u00b7 <code>NOT NULL</code></p> <p>The English name of the language.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/language/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>language</code> <p><code>language_id</code></p>"},{"location":"database/sakila/tables/language/#indices","title":"Indices","text":"<p>This table has one index.</p> <code>language_pkey</code> <p><code>language_id</code></p>"},{"location":"database/sakila/tables/payment/","title":"Table payment","text":"<p>This table records each payment made by a customer, with information such as the amount and the rental being paid for (when applicable). The table refers to the customer, rental, and staff table.</p>"},{"location":"database/sakila/tables/payment/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/payment/#columns","title":"Columns","text":"<p>This table contains 7 columns.</p> <code>payment_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key used to uniquely identify each payment.</p> <code>customer_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>The customer whose balance the payment is being applied to. This is a foreign key reference to the customer table.</p> <code>staff_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>The staff member who processed the payment. This is a foreign key reference to the staff table.</p> <code>rental_id</code> <p><code>integer</code></p> <p>The rental that the payment is being applied to. This is optional because some payments are for outstanding fees and may not be directly related to a rental.</p> <code>amount</code> <p><code>numeric(5,2)</code> \u00b7 <code>NOT NULL</code></p> <p>The amount of the payment.</p> <code>payment_date</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code></p> <p>The date the payment was processed.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/payment/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>payment</code> <p><code>payment_id</code></p>"},{"location":"database/sakila/tables/payment/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_payment_customer</code> <p><code>customer_id</code> \u00bb <code>sakila.customer (customer_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_payment_rental</code> <p><code>rental_id</code> \u00bb <code>sakila.rental (rental_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE SET NULL</code></p> <code>fk_payment_staff</code> <p><code>staff_id</code> \u00bb <code>sakila.staff (staff_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/payment/#indices","title":"Indices","text":"<p>This table has 3 indices.</p> <code>payment_pkey</code> <p><code>payment_id</code></p> <code>idx_payment_fk_customer_id</code> <p><code>customer_id</code></p> <code>idx_payment_fk_staff_id</code> <p><code>staff_id</code></p>"},{"location":"database/sakila/tables/rental/","title":"Table rental","text":"<p>This table contains one row for each rental of each inventory item with information about who rented what item, when it was rented, and when it was returned. The table refers to the inventory, customer, and staff tables and is referred to by the payment table.</p>"},{"location":"database/sakila/tables/rental/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/rental/#columns","title":"Columns","text":"<p>This table contains 7 columns.</p> <code>rental_id</code> <p><code>integer</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key that uniquely identifies the rental.</p> <code>rental_date</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code></p> <p>The date and time that the item was rented.</p> <code>inventory_id</code> <p><code>integer</code> \u00b7 <code>NOT NULL</code></p> <p>The item being rented.</p> <code>customer_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>The customer renting the item.</p> <code>return_date</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NULL::timestamp without time zone</code></p> <p>The date and time the item was returned.</p> <code>staff_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>The staff member who processed the rental.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/rental/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>rental</code> <p><code>rental_id</code></p>"},{"location":"database/sakila/tables/rental/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_rental_customer</code> <p><code>customer_id</code> \u00bb <code>sakila.customer (customer_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_rental_inventory</code> <p><code>inventory_id</code> \u00bb <code>sakila.inventory (inventory_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_rental_staff</code> <p><code>staff_id</code> \u00bb <code>sakila.staff (staff_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/rental/#indices","title":"Indices","text":"<p>This table has 5 indices.</p> <code>rental_pkey</code> <p><code>rental_id</code></p> <code>idx_rental_fk_customer_id</code> <p><code>customer_id</code></p> <code>idx_rental_fk_inventory_id</code> <p><code>inventory_id</code></p> <code>idx_rental_fk_staff_id</code> <p><code>staff_id</code></p> <code>rental_rental_date_inventory_id_customer_id_key</code> <p><code>rental_date, inventory_id, customer_id</code></p>"},{"location":"database/sakila/tables/staff/","title":"Table staff","text":"<p>This table lists all staff members, including information for email address, login information, and picture. The table refers to the store and address tables using foreign keys, and is referred to by the rental, payment, and store tables.</p>"},{"location":"database/sakila/tables/staff/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/staff/#columns","title":"Columns","text":"<p>This table contains 11 columns.</p> <code>staff_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key that uniquely identifies the staff member.</p> <code>first_name</code> <p><code>character varying(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The first name of the staff member.</p> <code>last_name</code> <p><code>character varying(45)</code> \u00b7 <code>NOT NULL</code></p> <p>The last name of the staff member.</p> <code>address_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key to the staff member address in the address table.</p> <code>picture</code> <p><code>bytea</code></p> <p>A BLOB containing a photograph of the employee.</p> <code>email</code> <p><code>character varying(50)</code> \u00b7 <code>NULL::character varying</code></p> <p>The staff member email address.</p> <code>store_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>The staff member home store. The employee can work at other stores but is generally assigned to the store listed.</p> <code>active</code> <p><code>boolean</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>true</code></p> <p>Whether this is an active employee. If employees leave, their rows are not deleted from this table; instead, this column is set to <code>FALSE</code>.</p> <code>username</code> <p><code>character varying(16)</code> \u00b7 <code>NOT NULL</code></p> <p>The user name used by the staff member to access the rental system.</p> <code>password</code> <p><code>character varying(40)</code> \u00b7 <code>NULL::character varying</code></p> <p>The password used by the staff member to access the rental system. The password should be stored as a secure hash.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p>"},{"location":"database/sakila/tables/staff/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>staff</code> <p><code>staff_id</code></p>"},{"location":"database/sakila/tables/staff/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_staff_address</code> <p><code>address_id</code> \u00bb <code>sakila.address (address_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_staff_store</code> <p><code>store_id</code> \u00bb <code>sakila.store (store_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/staff/#indices","title":"Indices","text":"<p>This table has 3 indices.</p> <code>staff_pkey</code> <p><code>staff_id</code></p> <code>idx_staff_fk_address_id</code> <p><code>address_id</code></p> <code>idx_staff_fk_store_id</code> <p><code>store_id</code></p>"},{"location":"database/sakila/tables/store/","title":"Table store","text":"<p>This table lists all stores in the system. All inventory is assigned to specific stores, and staff and customers are assigned a home store. The table refers to the STAFF and ADDRESS tables using foreign keys and is referred to by the STAFF, CUSTOMER, and INVENTORY tables.</p>"},{"location":"database/sakila/tables/store/#schema","title":"Schema","text":"<p>This table belongs to schema sakila.</p>"},{"location":"database/sakila/tables/store/#columns","title":"Columns","text":"<p>This table contains 4 columns.</p> <code>store_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A surrogate primary key that uniquely identifies the store.</p> <code>manager_staff_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the manager of this store.</p> <code>address_id</code> <p><code>smallint</code> \u00b7 <code>NOT NULL</code></p> <p>A foreign key identifying the address of this store.</p> <code>last_update</code> <p><code>timestamp(0) without time zone</code> \u00b7 <code>NOT NULL</code> \u00b7 <code>CURRENT_TIMESTAMP</code></p> <p>When the row was created or most recently updated.</p>"},{"location":"database/sakila/tables/store/#primary-key","title":"Primary key","text":"<p>This table has a primary key.</p> <code>store</code> <p><code>store_id</code></p>"},{"location":"database/sakila/tables/store/#foreign-keys","title":"Foreign keys","text":"<p>This table has one foreign key.</p> <code>fk_store_address</code> <p><code>address_id</code> \u00bb <code>sakila.address (address_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p> <code>fk_store_staff</code> <p><code>manager_staff_id</code> \u00bb <code>sakila.staff (staff_id)</code> \u00b7 <code>ON UPDATE CASCADE</code> \u00b7 <code>ON DELETE RESTRICT</code></p>"},{"location":"database/sakila/tables/store/#indices","title":"Indices","text":"<p>This table has 3 indices.</p> <code>store_pkey</code> <p><code>store_id</code></p> <code>idx_store_fk_address_id</code> <p><code>address_id</code></p> <code>store_manager_staff_id_key</code> <p><code>manager_staff_id</code></p>"},{"location":"database/sakila/views/actor_info/","title":"View actor_info","text":"<p>This view provides a list of all actors, including the films in which they have performed, broken down by category. The view incorporates data from the film, actor, category, film_actor, and film_category tables.</p>"},{"location":"database/sakila/views/actor_info/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/actor_info/#query","title":"Query","text":"SQL <pre><code> SELECT a.actor_id,\n    a.first_name,\n    a.last_name,\n    string_agg(DISTINCT concat(c.name, ': ', ( SELECT string_agg((f.title)::text, ', '::text ORDER BY f.title) AS string_agg\n           FROM ((sakila.film f\n             JOIN sakila.film_category fc_1 ON ((f.film_id = fc_1.film_id)))\n             JOIN sakila.film_actor fa_1 ON ((f.film_id = fa_1.film_id)))\n          WHERE ((fc_1.category_id = c.category_id) AND (fa_1.actor_id = a.actor_id)))), '; '::text) AS film_info\n   FROM (((sakila.actor a\n     LEFT JOIN sakila.film_actor fa ON ((a.actor_id = fa.actor_id)))\n     LEFT JOIN sakila.film_category fc ON ((fa.film_id = fc.film_id)))\n     LEFT JOIN sakila.category c ON ((fc.category_id = c.category_id)))\n  GROUP BY a.actor_id, a.first_name, a.last_name;\n</code></pre>"},{"location":"database/sakila/views/actor_info/#columns","title":"Columns","text":"<p>This view contains 4 columns.</p> <code>actor_id</code> <p><code>smallint</code></p> <code>first_name</code> <p><code>character varying(45)</code></p> <code>last_name</code> <p><code>character varying(45)</code></p> <code>film_info</code> <p><code>text</code></p>"},{"location":"database/sakila/views/customer_list/","title":"View customer_list","text":"<p>This view provides a list of customers, with first name and last name concatenated together and address information combined into a single view. The view incorporates data from the customer, address, city, and country tables.</p>"},{"location":"database/sakila/views/customer_list/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/customer_list/#query","title":"Query","text":"SQL <pre><code> SELECT cu.customer_id AS id,\n    concat((cu.first_name)::text, ' '::text, (cu.last_name)::text) AS name,\n    a.address,\n    a.postal_code AS \"zip code\",\n    a.phone,\n    city.city,\n    country.country,\n        CASE\n            WHEN cu.active THEN 'active'::text\n            ELSE ''::text\n        END AS notes,\n    cu.store_id AS sid\n   FROM (((sakila.customer cu\n     JOIN sakila.address a ON ((cu.address_id = a.address_id)))\n     JOIN sakila.city ON ((a.city_id = city.city_id)))\n     JOIN sakila.country ON ((city.country_id = country.country_id)));\n</code></pre>"},{"location":"database/sakila/views/customer_list/#columns","title":"Columns","text":"<p>This view contains 9 columns.</p> <code>id</code> <p><code>smallint</code></p> <code>name</code> <p><code>text</code></p> <code>address</code> <p><code>character varying(50)</code></p> <code>zip code</code> <p><code>character varying(10)</code></p> <code>phone</code> <p><code>character varying(20)</code></p> <code>city</code> <p><code>character varying(50)</code></p> <code>country</code> <p><code>character varying(50)</code></p> <code>notes</code> <p><code>text</code></p> <code>sid</code> <p><code>smallint</code></p>"},{"location":"database/sakila/views/film_list/","title":"View film_list","text":"<p>This view contains a formatted view of the film table, with a comma-separated list of actors for each film. The view incorporates data from the film, category, film_category, actor, and film_actor tables.</p>"},{"location":"database/sakila/views/film_list/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/film_list/#query","title":"Query","text":"SQL <pre><code> SELECT film.film_id AS fid,\n    film.title,\n    film.description,\n    category.name AS category,\n    film.rental_rate AS price,\n    film.length,\n    film.rating,\n    string_agg(concat((actor.first_name)::text, ' '::text, (actor.last_name)::text), ', '::text) AS actors\n   FROM ((((sakila.film\n     LEFT JOIN sakila.film_category ON ((film_category.film_id = film.film_id)))\n     LEFT JOIN sakila.category ON ((category.category_id = film_category.category_id)))\n     LEFT JOIN sakila.film_actor ON ((film.film_id = film_actor.film_id)))\n     LEFT JOIN sakila.actor ON ((film_actor.actor_id = actor.actor_id)))\n  GROUP BY film.film_id, category.name;\n</code></pre>"},{"location":"database/sakila/views/film_list/#columns","title":"Columns","text":"<p>This view contains 8 columns.</p> <code>fid</code> <p><code>smallint</code></p> <code>title</code> <p><code>character varying(128)</code></p> <code>description</code> <p><code>text</code></p> <code>category</code> <p><code>character varying(25)</code></p> <code>price</code> <p><code>numeric(4,2)</code></p> <code>length</code> <p><code>smallint</code></p> <code>rating</code> <p><code>sakila.rating</code></p> <code>actors</code> <p><code>text</code></p>"},{"location":"database/sakila/views/nicer_but_slower_film_list/","title":"View nicer_but_slower_film_list","text":"<p>This view contains a formatted view of the FILM table, with a comma-separated list of the film's actors. The view differs from the film_list view in the list of actors. The lettercase of the actor names is adjusted so that the first letter of each name is capitalized, rather than having the name in all-caps. As indicated in its name, this view performs additional processing and therefore takes longer to return data than the film_list view. The view incorporates data from the film, category, film_category, actor, and film_actor tables.</p>"},{"location":"database/sakila/views/nicer_but_slower_film_list/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/nicer_but_slower_film_list/#query","title":"Query","text":"SQL <pre><code> SELECT film.film_id AS fid,\n    film.title,\n    film.description,\n    category.name AS category,\n    film.rental_rate AS price,\n    film.length,\n    film.rating,\n    string_agg(concat(concat(upper(\"substring\"((actor.first_name)::text, 1, 1)), lower(\"substring\"((actor.first_name)::text, 2, length((actor.first_name)::text))), ' '::text, concat(upper(\"substring\"((actor.last_name)::text, 1, 1)), lower(\"substring\"((actor.last_name)::text, 2, length((actor.last_name)::text)))))), ', '::text) AS actors\n   FROM ((((sakila.film\n     LEFT JOIN sakila.film_category ON ((film_category.film_id = film.film_id)))\n     LEFT JOIN sakila.category ON ((category.category_id = film_category.category_id)))\n     LEFT JOIN sakila.film_actor ON ((film.film_id = film_actor.film_id)))\n     LEFT JOIN sakila.actor ON ((film_actor.actor_id = actor.actor_id)))\n  GROUP BY film.film_id, category.name;\n</code></pre>"},{"location":"database/sakila/views/nicer_but_slower_film_list/#columns","title":"Columns","text":"<p>This view contains 8 columns.</p> <code>fid</code> <p><code>smallint</code></p> <code>title</code> <p><code>character varying(128)</code></p> <code>description</code> <p><code>text</code></p> <code>category</code> <p><code>character varying(25)</code></p> <code>price</code> <p><code>numeric(4,2)</code></p> <code>length</code> <p><code>smallint</code></p> <code>rating</code> <p><code>sakila.rating</code></p> <code>actors</code> <p><code>text</code></p>"},{"location":"database/sakila/views/sales_by_film_category/","title":"View sales_by_film_category","text":"<p>This view provides a list of total sales, broken down by individual film category. Because a film can be listed in multiple categories, it is not advisable to calculate aggregate sales by totalling the rows of this view. The view incorporates data from the category, payment, rental, inventory, film, film_category, and category tables.</p>"},{"location":"database/sakila/views/sales_by_film_category/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/sales_by_film_category/#query","title":"Query","text":"SQL <pre><code> SELECT c.name AS category,\n    sum(p.amount) AS total_sales\n   FROM (((((sakila.payment p\n     JOIN sakila.rental r ON ((p.rental_id = r.rental_id)))\n     JOIN sakila.inventory i ON ((r.inventory_id = i.inventory_id)))\n     JOIN sakila.film f ON ((i.film_id = f.film_id)))\n     JOIN sakila.film_category fc ON ((f.film_id = fc.film_id)))\n     JOIN sakila.category c ON ((fc.category_id = c.category_id)))\n  GROUP BY c.name\n  ORDER BY (sum(p.amount)) DESC;\n</code></pre>"},{"location":"database/sakila/views/sales_by_film_category/#columns","title":"Columns","text":"<p>This view contains 2 columns.</p> <code>category</code> <p><code>character varying(25)</code></p> <code>total_sales</code> <p><code>numeric</code></p>"},{"location":"database/sakila/views/sales_by_store/","title":"View sales_by_store","text":"<p>This view provides a list of total sales, broken down by store. The view returns the store location, manager name, and total sales. The view incorporates data from the CITY, COUNTRY, PAYMENT, RENTAL, INVENTORY, STORE, ADDRESS, and STAFF tables.</p>"},{"location":"database/sakila/views/sales_by_store/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/sales_by_store/#query","title":"Query","text":"SQL <pre><code> SELECT concat((c.city)::text, ','::text, (cy.country)::text) AS store,\n    concat((m.first_name)::text, ' '::text, (m.last_name)::text) AS manager,\n    sum(p.amount) AS total_sales\n   FROM (((((((sakila.payment p\n     JOIN sakila.rental r ON ((p.rental_id = r.rental_id)))\n     JOIN sakila.inventory i ON ((r.inventory_id = i.inventory_id)))\n     JOIN sakila.store s ON ((i.store_id = s.store_id)))\n     JOIN sakila.address a ON ((s.address_id = a.address_id)))\n     JOIN sakila.city c ON ((a.city_id = c.city_id)))\n     JOIN sakila.country cy ON ((c.country_id = cy.country_id)))\n     JOIN sakila.staff m ON ((s.manager_staff_id = m.staff_id)))\n  GROUP BY cy.country, c.city, s.store_id, m.first_name, m.last_name\n  ORDER BY cy.country, c.city;\n</code></pre>"},{"location":"database/sakila/views/sales_by_store/#columns","title":"Columns","text":"<p>This view contains 3 columns.</p> <code>store</code> <p><code>text</code></p> <code>manager</code> <p><code>text</code></p> <code>total_sales</code> <p><code>numeric</code></p>"},{"location":"database/sakila/views/staff_list/","title":"View staff_list","text":"<p>This view provides a list of all staff members, including address and store information. The view incorporates data from the staff and address tables.</p>"},{"location":"database/sakila/views/staff_list/#schema","title":"Schema","text":"<p>This view belongs to schema sakila.</p>"},{"location":"database/sakila/views/staff_list/#query","title":"Query","text":"SQL <pre><code> SELECT s.staff_id AS id,\n    concat((s.first_name)::text, ' '::text, (s.last_name)::text) AS name,\n    a.address,\n    a.postal_code AS \"zip code\",\n    a.phone,\n    city.city,\n    country.country,\n    s.store_id AS sid\n   FROM (((sakila.staff s\n     JOIN sakila.address a ON ((s.address_id = a.address_id)))\n     JOIN sakila.city ON ((a.city_id = city.city_id)))\n     JOIN sakila.country ON ((city.country_id = country.country_id)));\n</code></pre>"},{"location":"database/sakila/views/staff_list/#columns","title":"Columns","text":"<p>This view contains 8 columns.</p> <code>id</code> <p><code>smallint</code></p> <code>name</code> <p><code>text</code></p> <code>address</code> <p><code>character varying(50)</code></p> <code>zip code</code> <p><code>character varying(10)</code></p> <code>phone</code> <p><code>character varying(20)</code></p> <code>city</code> <p><code>character varying(50)</code></p> <code>country</code> <p><code>character varying(50)</code></p> <code>sid</code> <p><code>smallint</code></p>"}]}